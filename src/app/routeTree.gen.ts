/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as mainIndexImport } from './routes/(main)/index'
import { Route as mainSignupImport } from './routes/(main)/signup'
import { Route as mainLoginImport } from './routes/(main)/login'
import { Route as mainBoardEditIndexImport } from './routes/(main)/board/edit/index'

// Create/Update Routes

const mainIndexRoute = mainIndexImport.update({
  id: '/(main)/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const mainSignupRoute = mainSignupImport.update({
  id: '/(main)/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const mainLoginRoute = mainLoginImport.update({
  id: '/(main)/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const mainBoardEditIndexRoute = mainBoardEditIndexImport.update({
  id: '/(main)/board/edit/',
  path: '/board/edit/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(main)/login': {
      id: '/(main)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof mainLoginImport
      parentRoute: typeof rootRoute
    }
    '/(main)/signup': {
      id: '/(main)/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof mainSignupImport
      parentRoute: typeof rootRoute
    }
    '/(main)/': {
      id: '/(main)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof mainIndexImport
      parentRoute: typeof rootRoute
    }
    '/(main)/board/edit/': {
      id: '/(main)/board/edit/'
      path: '/board/edit'
      fullPath: '/board/edit'
      preLoaderRoute: typeof mainBoardEditIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/login': typeof mainLoginRoute
  '/signup': typeof mainSignupRoute
  '/': typeof mainIndexRoute
  '/board/edit': typeof mainBoardEditIndexRoute
}

export interface FileRoutesByTo {
  '/login': typeof mainLoginRoute
  '/signup': typeof mainSignupRoute
  '/': typeof mainIndexRoute
  '/board/edit': typeof mainBoardEditIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/(main)/login': typeof mainLoginRoute
  '/(main)/signup': typeof mainSignupRoute
  '/(main)/': typeof mainIndexRoute
  '/(main)/board/edit/': typeof mainBoardEditIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/login' | '/signup' | '/' | '/board/edit'
  fileRoutesByTo: FileRoutesByTo
  to: '/login' | '/signup' | '/' | '/board/edit'
  id:
    | '__root__'
    | '/(main)/login'
    | '/(main)/signup'
    | '/(main)/'
    | '/(main)/board/edit/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  mainLoginRoute: typeof mainLoginRoute
  mainSignupRoute: typeof mainSignupRoute
  mainIndexRoute: typeof mainIndexRoute
  mainBoardEditIndexRoute: typeof mainBoardEditIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  mainLoginRoute: mainLoginRoute,
  mainSignupRoute: mainSignupRoute,
  mainIndexRoute: mainIndexRoute,
  mainBoardEditIndexRoute: mainBoardEditIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/(main)/login",
        "/(main)/signup",
        "/(main)/",
        "/(main)/board/edit/"
      ]
    },
    "/(main)/login": {
      "filePath": "(main)/login.tsx"
    },
    "/(main)/signup": {
      "filePath": "(main)/signup.tsx"
    },
    "/(main)/": {
      "filePath": "(main)/index.tsx"
    },
    "/(main)/board/edit/": {
      "filePath": "(main)/board/edit/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
